apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: universal-data-stack
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'universal-data-stack'
        replica: 'prometheus-1'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # Universal Data Stack Services
      - job_name: 'universal-data-stack-api-gateway'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: universal-data-stack-api-gateway
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'universal-data-stack-auth-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: universal-data-stack-auth-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'universal-data-stack-data-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: universal-data-stack-data-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'universal-data-stack-search-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: universal-data-stack-search-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'universal-data-stack-notification-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: universal-data-stack-notification-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'universal-data-stack-analytics-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: universal-data-stack-analytics-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      # MongoDB
      - job_name: 'mongodb'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: mongodb
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      # Redis
      - job_name: 'redis'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: redis
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      # Elasticsearch
      - job_name: 'elasticsearch'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: elasticsearch
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      # Consul
      - job_name: 'consul'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - universal-data-stack
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: consul
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

  # Alert rules
  rules.yml: |
    groups:
    - name: universal-data-stack
      rules:
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second"

      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }} seconds"

      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service is down"
          description: "Service {{ $labels.instance }} is down"

      - alert: HighMemoryUsage
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}%"

      - alert: HighCPUUsage
        expr: (rate(container_cpu_usage_seconds_total[5m]) / container_spec_cpu_quota * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}%"

      - alert: DiskSpaceLow
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) < 0.1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Disk space low"
          description: "Disk space is {{ $value }}% available"

      - alert: DatabaseConnectionFailed
        expr: mongodb_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Database connection failed"
          description: "MongoDB is not accessible"

      - alert: ElasticsearchClusterRed
        expr: elasticsearch_cluster_health_status{color="red"} == 1
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Elasticsearch cluster is red"
          description: "Elasticsearch cluster health is red"

      - alert: RedisDown
        expr: redis_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis is not accessible"

      - alert: ConsulDown
        expr: consul_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Consul is down"
          description: "Consul is not accessible"

      - alert: HighQueueSize
        expr: kafka_consumer_lag_sum > 1000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High queue size"
          description: "Kafka consumer lag is {{ $value }}"

      - alert: SlowQueries
        expr: mongodb_op_latencies_latency > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Slow database queries"
          description: "Database query latency is {{ $value }} seconds"